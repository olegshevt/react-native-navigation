{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/oleg/Desktop/DEV/TESTING_TASKS/mobile_app/App.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { NavigationContainer, SafeAreaView, DefaultTheme, DrawerActions } from '@react-navigation/native';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport imageItem from \"./assets/white-navigation.png\";\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction HomeScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar Drawer = createDrawerNavigator();\n\nfunction CustomDrawerContent(props) {\n  return React.createElement(DrawerContentScrollView, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.mainContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.menuContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.nameLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Viktor\"), React.createElement(DrawerItemList, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.borderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.signOutButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.signOutButtonLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 72\n    }\n  }, \"Sign Out\"))), React.createElement(View, {\n    style: styles.imageBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    style: styles.leftImage,\n    source: imageItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  })))));\n}\n\nfunction DrawerNavigator() {\n  var _this = this;\n\n  var dimensions = useWindowDimensions();\n  return React.createElement(Drawer.Navigator, {\n    screenOptions: {},\n    drawerStyle: styles.paddingTopItem,\n    drawerContentOptions: {\n      activeTintColor: '#FC8074',\n      activeBackgroundColor: 'rgba(252, 128, 116, .2);',\n      inactiveTintColor: '#fff',\n      itemStyle: {\n        marginVertical: 5,\n        color: '#fff',\n        padding: 0\n      },\n      labelStyle: {\n        fontSize: 20,\n        borderRadius: 30,\n        marginTop: 3,\n        paddingLeft: 20,\n        paddingBottom: 5,\n        paddingTop: 5\n      }\n    },\n    hideStatusBar: true,\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Start\",\n    component: StackNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Your Cart\",\n    component: StackNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Favourites\",\n    component: StackNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Your Orders\",\n    component: StackNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar Stack = createStackNavigator();\n\nfunction StackNavigator(_ref) {\n  var _this2 = this;\n\n  var navigation = _ref.navigation;\n  return React.createElement(React.Fragment, null, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      headerTitle: React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 34\n        }\n      }, \"Start\"),\n      headerTitleStyle: {\n        marginLeft: 30,\n        fontSize: 24,\n        lineHeight: 33,\n        color: '#9F9FA0',\n        textTransform: 'uppercase'\n      },\n      headerTitleAlign: 'left',\n      headerLeftContainerStyle: {\n        marginLeft: 36\n      },\n      headerStyle: {\n        shadowColor: 'transparent',\n        height: 80\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(Ionicons, {\n          onPress: function onPress() {\n            return navigation.dispatch(DrawerActions.openDrawer());\n          },\n          name: \"ios-menu-outline\",\n          size: 36,\n          color: \"#9F9FA0\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }\n        });\n      },\n      headerRight: function headerRight() {\n        return React.createElement(Button, {\n          onPress: function onPress() {\n            return alert('This is a button!');\n          },\n          title: \"Info\",\n          color: \"#fff\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })));\n}\n\nfunction App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, React.createElement(DrawerNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;\nvar styles = StyleSheet.create({\n  mainContent: {\n    backgroundColor: '#1F1B33',\n    borderTopLeftRadius: 48,\n    display: 'flex',\n    height: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  drawerItems: {\n    color: '#fff'\n  },\n  signOutButtonLabel: {\n    color: '#fff',\n    fontSize: 20,\n    lineHeight: 27,\n    marginLeft: 40\n  },\n  borderItem: {\n    height: 1,\n    width: 220,\n    backgroundColor: '#fff',\n    marginBottom: 50,\n    marginTop: 30\n  },\n  leftImage: {\n    width: 360,\n    height: 665,\n    transform: [{\n      rotate: \"-10deg\"\n    }]\n  },\n  imageBlock: {\n    backgroundColor: '#1F1B33',\n    paddingLeft: 30\n  },\n  menuContainer: {\n    paddingRight: 20,\n    paddingLeft: 20,\n    paddingTop: 100\n  },\n  nameLabel: {\n    color: '#fff',\n    fontSize: 28,\n    lineHeight: 38,\n    marginLeft: 35,\n    fontWeight: 'bold'\n  },\n  paddingTopItem: {\n    width: '100%',\n    backgroundColor: '#1F1B33'\n  }\n});","map":{"version":3,"sources":["/Users/oleg/Desktop/DEV/TESTING_TASKS/mobile_app/App.js"],"names":["React","NavigationContainer","SafeAreaView","DefaultTheme","DrawerActions","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","createStackNavigator","imageItem","Ionicons","HomeScreen","flex","alignItems","justifyContent","backgroundColor","Drawer","CustomDrawerContent","props","styles","mainContent","menuContainer","nameLabel","borderItem","signOutButton","signOutButtonLabel","imageBlock","leftImage","DrawerNavigator","dimensions","useWindowDimensions","paddingTopItem","activeTintColor","activeBackgroundColor","inactiveTintColor","itemStyle","marginVertical","color","padding","labelStyle","fontSize","borderRadius","marginTop","paddingLeft","paddingBottom","paddingTop","StackNavigator","Stack","navigation","headerTitle","headerTitleStyle","marginLeft","lineHeight","textTransform","headerTitleAlign","headerLeftContainerStyle","headerStyle","shadowColor","height","headerLeft","dispatch","openDrawer","headerRight","alert","App","StyleSheet","create","borderTopLeftRadius","display","flexDirection","drawerItems","width","marginBottom","transform","rotate","paddingRight","fontWeight"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, Text, Button, StyleSheet, TouchableOpacity, Image, StatusBar } from 'react-native';\nimport { NavigationContainer, SafeAreaView, DefaultTheme, DrawerActions } from '@react-navigation/native';\nimport {\n    createDrawerNavigator,\n    DrawerContentScrollView,\n    DrawerItemList,\n    DrawerItem,\n} from '@react-navigation/drawer';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useWindowDimensions } from 'react-native';\nimport imageItem from './assets/white-navigation.png';\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction HomeScreen() {\n    return (\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#fff' }}>\n            <StatusBar hidden={true} />\n        </View>\n    );\n}\n\nconst Drawer = createDrawerNavigator();\n\n// const DrawerNavigator = () => {\n//     return (\n//         <Drawer.Navigator>\n//             <Drawer.Screen name=\"Start\" component={StackNavigator} />\n//             <Drawer.Screen name=\"Your Cart\" component={StackNavigator} />\n//             <Drawer.Screen name=\"Favourites\" component={StackNavigator} />\n//             <Drawer.Screen name=\"Your Orders\" component={StackNavigator} />\n//         </Drawer.Navigator>\n//     );\n// }\n\nfunction CustomDrawerContent(props) {\n    return (\n        <DrawerContentScrollView {...props}>\n            <View style={{ backgroundColor: '#fff' }}>\n                <View style={styles.mainContent}>\n                    <View style={styles.menuContainer}>\n                        <Text style={styles.nameLabel}>Viktor</Text>\n                        <DrawerItemList {...props} />\n                        <View style={styles.borderItem}></View>\n                        <TouchableOpacity style={styles.signOutButton}><Text style={styles.signOutButtonLabel}>Sign Out</Text></TouchableOpacity>\n                    </View>\n                    <View style={styles.imageBlock}>\n                        <Image style={styles.leftImage} source={imageItem} />\n                    </View>\n                </View>\n            </View>\n        </DrawerContentScrollView>\n    );\n}\n\nfunction DrawerNavigator() {\n    const dimensions = useWindowDimensions();\n    return (\n\n        <Drawer.Navigator screenOptions={{\n        }} drawerStyle={styles.paddingTopItem}\n            drawerContentOptions={{\n                activeTintColor: '#FC8074',\n                activeBackgroundColor: 'rgba(252, 128, 116, .2);',\n                inactiveTintColor: '#fff',\n                itemStyle: { marginVertical: 5, color: '#fff', padding: 0 },\n                labelStyle: { fontSize: 20, borderRadius: 30, marginTop: 3, paddingLeft: 20, paddingBottom: 5, paddingTop: 5 }\n            }}\n            hideStatusBar={true}\n            drawerContent={props => <CustomDrawerContent {...props} />}>\n            <Drawer.Screen name=\"Start\" component={StackNavigator} />\n            <Drawer.Screen name=\"Your Cart\" component={StackNavigator} />\n            <Drawer.Screen name=\"Favourites\" component={StackNavigator} />\n            <Drawer.Screen name=\"Your Orders\" component={StackNavigator} />\n        </Drawer.Navigator>\n\n    );\n}\n\n\nconst Stack = createStackNavigator();\n\nfunction StackNavigator({ navigation }) {\n    return (\n        <>\n            <Stack.Navigator>\n                <Stack.Screen options={{\n                    headerTitle: <Text>Start</Text>,\n                    headerTitleStyle: {\n                        marginLeft: 30,\n                        fontSize: 24,\n                        lineHeight: 33,\n                        color: '#9F9FA0',\n                        textTransform: 'uppercase'\n                    },\n\n                    headerTitleAlign: 'left',\n                    headerLeftContainerStyle: {\n                        marginLeft: 36\n                    },\n                    headerStyle: {\n                        shadowColor: 'transparent',\n                        height: 80\n                    },\n                    headerLeft: () => (\n                        <Ionicons onPress={() => navigation.dispatch(DrawerActions.openDrawer())} name=\"ios-menu-outline\" size={36} color=\"#9F9FA0\" />\n                    ),\n                    headerRight: () => (\n                        <Button\n                            onPress={() => alert('This is a button!')}\n                            title=\"Info\"\n                            color=\"#fff\"\n                        />\n                    ),\n                }} name=\"Home\" component={HomeScreen} />\n            </Stack.Navigator>\n        </>\n    );\n}\n\nfunction App() {\n    return (\n\n        <NavigationContainer>\n            <DrawerNavigator />\n        </NavigationContainer>\n    )\n}\nexport default App;\n\nconst styles = StyleSheet.create({\n    mainContent: {\n        backgroundColor: '#1F1B33',\n        borderTopLeftRadius: 48,\n        display: 'flex',\n        height: '100%',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    drawerItems: {\n        color: '#fff',\n    },\n    signOutButtonLabel: {\n        color: '#fff',\n        fontSize: 20,\n        lineHeight: 27,\n        marginLeft: 40\n    },\n    borderItem: {\n        height: 1,\n        width: 220,\n        backgroundColor: '#fff',\n        marginBottom: 50,\n        marginTop: 30\n    },\n    leftImage: {\n        width: 360,\n        height: 665,\n        transform: [{ rotate: \"-10deg\" }]\n    },\n    imageBlock: {\n        backgroundColor: '#1F1B33',\n        paddingLeft: 30\n    },\n    menuContainer: {\n        paddingRight: 20,\n        paddingLeft: 20,\n        paddingTop: 100\n    },\n    nameLabel: {\n        color: '#fff',\n        fontSize: 28,\n        lineHeight: 38,\n        marginLeft: 35,\n        fontWeight: 'bold'\n    },\n    paddingTopItem: {\n        width: '100%',\n        backgroundColor: '#1F1B33',\n    },\n});\n\n\n\n"]},"metadata":{},"sourceType":"module"}