{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/oleg/Desktop/DEV/TESTING_TASKS/mobile_app/App.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer, DrawerActions } from '@react-navigation/native';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\n\nfunction Feed(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Feed Screen\"), React.createElement(Button, {\n    title: \"Open drawer\",\n    onPress: function onPress() {\n      return navigation.dispatch(DrawerActions.openDrawer());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Toggle drawer\",\n    onPress: function onPress() {\n      return navigation.dispatch(DrawerActions.toggleDrawer());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Notifications() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Notifications Screen\"));\n}\n\nfunction CustomDrawerContent(props) {\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.mainContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.menuContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.nameLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Viktor\"), React.createElement(DrawerItemList, _extends({\n    style: {\n      padding: 0\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), React.createElement(DrawerItem, {\n    label: \"Close drawer\",\n    onPress: function onPress() {\n      return props.navigation.dispatch(DrawerActions.closeDrawer());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), React.createElement(DrawerItem, {\n    label: \"Toggle drawer\",\n    onPress: function onPress() {\n      return props.navigation.dispatch(DrawerActions.toggleDrawer());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.borderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.signOutButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Sign Out\")), React.createElement(View, {\n    style: styles.imageBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.leftImage,\n    source: require(\"./assets/white-navigation.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar Drawer = createDrawerNavigator();\n\nfunction MyDrawer() {\n  var _this = this;\n\n  var dimensions = useWindowDimensions();\n  return React.createElement(Drawer.Navigator, {\n    drawerStyle: {\n      width: '100%',\n      height: '100%',\n      paddingTop: '0',\n      backgroundColor: 'black'\n    },\n    drawerContentOptions: {\n      activeTintColor: '#e91e63',\n      inactiveTintColor: '#fff',\n      itemStyle: {\n        marginVertical: 5,\n        color: '#fff',\n        padding: 0\n      }\n    },\n    style: {\n      padding: 0\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, _extends({\n        style: {\n          padding: 0\n        }\n      }, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 54\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    style: {\n      padding: 0\n    },\n    name: \"Start\",\n    component: Feed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Your Cart\",\n    component: Notifications,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Favourites\",\n    component: Notifications,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Your Orders\",\n    component: Notifications,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    style: styles.paddingTopItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, React.createElement(MyDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  mainContent: {\n    backgroundColor: '#1F1B33',\n    borderTopLeftRadius: 48,\n    display: 'flex',\n    height: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 0\n  },\n  drawerItems: {\n    color: '#fff'\n  },\n  signOutButton: {\n    color: '#fff',\n    backgroundColor: 'none'\n  },\n  borderItem: {\n    height: 1,\n    width: 175,\n    backgroundColor: '#fff',\n    marginBottom: 50\n  },\n  leftImage: {\n    width: 220,\n    height: '100%',\n    transform: 'rotate(-0.03turn)'\n  },\n  imageBlock: {\n    backgroundColor: '#1F1B33',\n    widht: 250,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingLeft: 70\n  },\n  menuContainer: {\n    padding: 20\n  },\n  nameLabel: {\n    color: '#fff'\n  },\n  paddingTopItem: {\n    padding: 0\n  }\n});","map":{"version":3,"sources":["/Users/oleg/Desktop/DEV/TESTING_TASKS/mobile_app/App.js"],"names":["React","NavigationContainer","DrawerActions","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","Feed","navigation","flex","justifyContent","alignItems","dispatch","openDrawer","toggleDrawer","Notifications","CustomDrawerContent","props","styles","mainContent","menuContainer","nameLabel","padding","closeDrawer","borderItem","signOutButton","imageBlock","leftImage","require","Drawer","MyDrawer","dimensions","useWindowDimensions","width","height","paddingTop","backgroundColor","activeTintColor","inactiveTintColor","itemStyle","marginVertical","color","App","paddingTopItem","StyleSheet","create","borderTopLeftRadius","display","flexDirection","drawerItems","marginBottom","transform","widht","paddingLeft"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, Text, Button, StyleSheet, TouchableOpacity, Image } from 'react-native';\nimport { NavigationContainer, DrawerActions } from '@react-navigation/native';\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n  DrawerItemList,\n  DrawerItem,\n} from '@react-navigation/drawer';\nimport { useWindowDimensions } from 'react-native';\n\nfunction Feed({ navigation }) {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Feed Screen</Text>\n      <Button\n        title=\"Open drawer\"\n        onPress={() => navigation.dispatch(DrawerActions.openDrawer())}\n      />\n      <Button\n        title=\"Toggle drawer\"\n        onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n      />\n    </View>\n  );\n}\n\nfunction Notifications() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Notifications Screen</Text>\n    </View>\n  );\n}\n\nfunction CustomDrawerContent(props) {\n  return (\n    <>\n      {/* // <DrawerContentScrollView style={styles.paddingTopItem} {...props}> */}\n      <View style={styles.mainContent}>\n        <View style={styles.menuContainer}>\n          <Text style={styles.nameLabel}>Viktor</Text>\n          <DrawerItemList style={{ padding: 0 }} {...props} />\n          <DrawerItem\n            label=\"Close drawer\"\n            onPress={() => props.navigation.dispatch(DrawerActions.closeDrawer())}\n          />\n          <DrawerItem\n            label=\"Toggle drawer\"\n            onPress={() => props.navigation.dispatch(DrawerActions.toggleDrawer())}\n          />\n          <View style={styles.borderItem}></View>\n          <TouchableOpacity style={styles.signOutButton}>Sign Out</TouchableOpacity>\n        </View>\n        <View style={styles.imageBlock}>\n          <Image style={styles.leftImage} source={require('./assets/white-navigation.png')} />\n        </View>\n      </View>\n      {/* </DrawerContentScrollView> */}\n    </>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\n\nfunction MyDrawer() {\n  const dimensions = useWindowDimensions();\n  return (\n    <Drawer.Navigator drawerStyle={{ width: '100%', height: '100%', paddingTop: '0', backgroundColor: 'black' }}\n      drawerContentOptions={{\n        activeTintColor: '#e91e63',\n        inactiveTintColor: '#fff',\n        itemStyle: { marginVertical: 5, color: '#fff', padding: 0 },\n      }}\n      style={{ padding: 0 }} drawerContent={props => <CustomDrawerContent style={{ padding: 0 }} {...props} />}>\n      <Drawer.Screen style={{ padding: 0 }} name=\"Start\" component={Feed} />\n      <Drawer.Screen name=\"Your Cart\" component={Notifications} />\n      <Drawer.Screen name=\"Favourites\" component={Notifications} />\n      <Drawer.Screen name=\"Your Orders\" component={Notifications} />\n    </Drawer.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer style={styles.paddingTopItem}>\n      <MyDrawer />\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  mainContent: {\n    backgroundColor: '#1F1B33',\n    borderTopLeftRadius: 48,\n    display: 'flex',\n    height: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 0\n  },\n  drawerItems: {\n    color: '#fff',\n  },\n  signOutButton: {\n    color: '#fff',\n    backgroundColor: 'none'\n  },\n  borderItem: {\n    height: 1,\n    width: 175,\n    backgroundColor: '#fff',\n    marginBottom: 50,\n  },\n  leftImage: {\n    width: 220,\n    height: '100%',\n    transform: 'rotate(-0.03turn)',\n    // marginTop: 40\n  },\n  imageBlock: {\n    backgroundColor: '#1F1B33',\n    widht: 250,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingLeft: 70\n  },\n  menuContainer: {\n    padding: 20\n  },\n  nameLabel: {\n    color: '#fff'\n  },\n  paddingTopItem: {\n    padding: 0\n  }\n\n});\n\n\n\n// import React from 'react';\n// import { StyleSheet, Text, View } from 'react-native';\n// import MainNavigator from './navigation/MainNavigator';\n\n// export default function App() {\n//   return (\n\n//     <MainNavigator />\n//     // <View style={styles.container}>\n//     //   <View>\n//     //     <Text>Viktor</Text>\n//     //   </View>\n//     // </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n//   mainContent: {\n//     backgroundColor: '#1F1B33',\n//   }\n\n\n// });\n"]},"metadata":{},"sourceType":"module"}